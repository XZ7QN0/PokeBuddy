# Generated by Django 2.2.1 on 2019-06-24 03:03

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Pokemon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pkmn_name', models.CharField(default='Pikachu', max_length=40)),
                ('pkmn_nickname', models.CharField(default='', max_length=40)),
                ('pkmn_number', models.PositiveIntegerField(default=1, null=True)),
                ('pkmn_level', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('ball_captured', models.CharField(choices=[('POKE', 'Pokeball'), ('GREAT', 'Great Ball'), ('ULTRA', 'Ultra Ball'), ('MASTER', 'Master Ball'), ('DIVE', 'Dive Ball'), ('FAST', 'Fast Ball'), ('BEAST', 'Beast Ball'), ('DUSK', 'Dusk Ball'), ('HEAL', 'Heal Ball'), ('LEVEL', 'Level Ball'), ('LOVE', 'Love Ball'), ('FRIEND', 'Friend Ball'), ('NEST', 'Nest Ball'), ('LUXURY', 'Luxury Ball'), ('HEAVY', 'Heavy Ball'), ('NET', 'Net Ball'), ('MOON', 'Moon Ball'), ('LURE', 'Lure Ball'), ('QUICK', 'Quick Ball'), ('PREMIER', 'Premier Ball'), ('TIMER', 'Timer Ball'), ('REPEAT', 'Repeat Ball')], default='POKE', max_length=40)),
                ('original_generation', models.CharField(choices=[('1', 'Kanto'), ('2', 'Johto'), ('3', 'Hoenn'), ('4', 'Sinnoh'), ('5', 'Unova'), ('6', 'Kalos'), ('7', 'Alola'), ('8', 'Galar')], default='7', max_length=40)),
                ('held_item', models.CharField(max_length=40, null=True)),
                ('ability', models.CharField(max_length=40)),
                ('nature', models.CharField(choices=[('HARDY', 'Hardy'), ('LONELY', 'Lonely'), ('BRAVE', 'Brave'), ('ADAMANT', 'Adamant'), ('NAUGHTY', 'Naughty'), ('BOLD', 'Bold'), ('DOCILE', 'Docile'), ('RELAXED', 'Relaxed'), ('IMPISH', 'Impish'), ('LAX', 'Lax'), ('TIMID', 'Timid'), ('HASTY', 'Hasty'), ('SERIOUS', 'Serious'), ('JOLLY', 'Jolly'), ('NAIVE', 'Naive'), ('MODEST', 'Modest'), ('MILD', 'Mild'), ('QUIET', 'Quiet'), ('BASHFUL', 'Bashful'), ('RASH', 'Rash'), ('CALM', 'Calm'), ('GENTLE', 'Gentle'), ('SASSY', 'Sassy'), ('CAREFUL', 'Careful'), ('QUIRKY', 'Quirky')], default='ADAMANT', max_length=40)),
                ('pkrs', models.BooleanField(default=False)),
                ('shiny', models.BooleanField(default=False)),
                ('captured_date', models.DateField(default=datetime.date.today)),
            ],
        ),
        migrations.CreateModel(
            name='Attacks',
            fields=[
                ('attacks', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='PokeTraining.Pokemon')),
                ('attack1', models.CharField(default='Toxic', max_length=40)),
                ('attack2', models.CharField(default='Hidden Power', max_length=40)),
                ('attack3', models.CharField(default='Double Team', max_length=40)),
                ('attack4', models.CharField(default='Hyper Beam', max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='OriginalTrainer',
            fields=[
                ('ot', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='PokeTraining.Pokemon')),
                ('pkmn_ot', models.CharField(default='Jonathon', max_length=15)),
                ('trainer_id', models.PositiveIntegerField(default=857172, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(999999)])),
            ],
        ),
        migrations.CreateModel(
            name='Stats',
            fields=[
                ('stats', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='PokeTraining.Pokemon')),
                ('ev_hp', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(512)])),
                ('ev_atk', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(512)])),
                ('ev_def', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(512)])),
                ('ev_satk', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(512)])),
                ('ev_sdef', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(512)])),
                ('ev_spd', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(512)])),
                ('iv_hp', models.PositiveIntegerField(default=31, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(31)])),
                ('iv_atk', models.PositiveIntegerField(default=31, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(31)])),
                ('iv_def', models.PositiveIntegerField(default=31, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(31)])),
                ('iv_satk', models.PositiveIntegerField(default=31, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(31)])),
                ('iv_sdef', models.PositiveIntegerField(default=31, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(31)])),
                ('iv_spd', models.PositiveIntegerField(default=31, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(31)])),
            ],
        ),
    ]
